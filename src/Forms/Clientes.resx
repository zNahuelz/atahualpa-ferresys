<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACABgFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAsAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAJAAAACQAAAAsAAAAKAAAACgAAAAsA
        AAAOAAAAAAAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAwAAAAJAAAACgAAAAwAAAAJAAAACwAAAAoA
        AAAKAAAACgAAAAoAAAAJAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACQAAAAsAAAAKAAAACwAAAAoA
        AAAKAAAACwAAAAoAAAAKAAAACgAAAAkAAAAKAAAACgAAAAoAAAALAAAADAAAAAsAAAAJAAAACQAAAAoA
        AAAAAAAAAAAAAA0AAAAJAAAACgAAAAoAAAAKAAAAEQAAAAoAAAAKAAAACgAAAAwAAAAKAAAAAAAAAAoA
        AAALAAAACgAAAAoAAAAKAAAACAAAAAsAAAAKAAAACgAAAAAAAAAKAAAAFAAAAAsAAAAJAAAAAAAAAAoA
        AAAJAAAAAAAAAAsAAAALAAAACgAAAAoAAAAIAAAACgAAAAsAAAAKAAAAAAAAAAkAAAANAAAACQAAAAoA
        AAAJAAAACwAAAOm1DwDosw8A57IOAOWuDwDrrg0A5rIOAOGxDwASAAAA5rEPAN2qEQAKAAAA6bQOAOSq
        EADlrg0A26oMAAsAAAAKAAAA4KQKANuSAAALAAAA4KMLAAoAAADgpAsA3aUOAAoAAADfpAsACgAAAOCk
        CwDmpg0A4aMLAOCkCwDgpAsA6bQPAOCkCwDotA8A5rAPAOGlCwDrsQ0A5KENAOiyDADjow4A6LEPAOCl
        CwDbpBIA6bQOANWqAADjsREA4KMKAOCkCwDepgsA4KQLAOGkCwDgpAsA4KQLAAoAAAAtHAIAkGwIAM6e
        DADhrQ4A57QPAOm2DwBHLwQAzZ4MAOq3DwAXCwEAv5EMAOm3DwAwHgMA360NADIgAwDlsg4AFgoBAOWu
        DQDgpAsA9uKdAEYwBAD///8A5a0NACwbAgCRbAgA8tqbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRiISfoLSgn4SI
        kQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJOEhrS0tLS0
        tLS0tJ2ekwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmH+BtLS0
        tLS0tLS0tLS0tIGVmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkZu0
        tLS0tLS0tLS0tLS0tLS0tHycAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        mXi0tLS0tLS0tLS0tLS0tLS0tLS0mnkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAlpeqs7S0tLS0tLS0tLS0tLS0tLS0tLR8mAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAJSqqqqztLS0tLS0u7u7tLS0tLS0tLS0tJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJKnqqqqqri0tLS0tLe3t7S0tLS0tLS0tLSBkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABwqqqqqqqquLS0tLS3t7e0tLS0tLS0tLS0tIQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACQqqqqqqqqqqqztLS0t7e3tLS0tLS0tLS0tLSGkQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAjqqqqqqqqqqqqri0tLe3t7S0tLS0tLS0tLS0tI8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG2qqqqqqqqqqqqqs7S3t7e0tLS0tLS0tLS0tLSEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNqqqqqqqqqqqqqqq4t7e3tLS0tLS0tLS0tLS0igAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa6qqqqqqtbe3t7e3t7e3t7e3t7e3t7u0tLS0
        tIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK2qqqqqqrW3t7e3t7e3t7e3t7e3t7e7
        tLS0tLSGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACLqqqqqqq1t7e3t7e3t7e3t7e3
        t7e3u7S0tLS0jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbKqqqqqqqqqqqqqqqre3
        t7i0tLS0tLS0tLS0tIoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG2qqqqqqqqqqqqq
        qqq3t7eqs7S0tLS0tLS0tLSJBqGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaG6qqqqqqqq
        qqqqqqqqt7e3qqq4tLS0tLS0tLS0iIWhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhuaqq
        qqqqqqqqqqqqqre3t6qqqrO0tLS0tLS0hoeDoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGh
        oaGkqqqqqqqqqqqqqqq3t7eqqqqquLS0tLS0tIQAgKGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGh
        oaGhoaGhtq2qqqqqqqqqqqqqt7e3qqqqqqq4tLS0tIGCAH6hoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGh
        oaGhoaGhoaGhoaGsqqqqqqqqqqqqqrW1taqqqqqqqrO0tLR/AAB6e6GhoaGhoaGhoaGhoaGhoaGhoaGh
        oaGhoaGhoaGhoaGhoaGhsq+qqqqqqqqqqqqqqqqqqqqqqqqqs7R8fQAAAGqhoaGhoaGhoaGhoaGhoaGh
        oaGhoaGhoaGhoaGhoaGhoaGhoaGwsaqqqqqqqqqqqqqqqqqqqqqqqqp4eQAAAAB1oaGhoaGhoaGhoaGh
        oaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoa6vqqqqqqqqqqqqqqqqqqqqqqp2dwAAAAAAckGhoaGhoaGh
        oaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhq6ytqqqqqqqqqqqqqqqqqq1zdAAAAAAAAABIoaGh
        oaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhqKmqqqqqqqqqqqqqqnBxAAAAAAAAAAAA
        VU2hoaGhoaGhoaGhoaGhoaGhoaGhoaFqGAahoaGhoaGhoaGhoaGhoaGhoqOkpaana2xtbm8AAAAAAAAA
        AAAAAABnoaGhoaGhoaGhoaGhoaGhoaGhoRJoWwAXaaGhoaGhoaGhoaGhoaGhoaGhoaFASQAAAAAAAAAA
        AAAAAAAAAAAAADChoaGhoaGhoaGhoaGhoaGhoWMkAAAAAGRloaGhoaGhoaGhoaGhoaGhoaEbZgAAAAAA
        AAAAAAAAAAAAAAAAAABTXqGhoaGhoaGhoaGhoaGhoV9gAAAAAAAAAFAGoaGhoaGhoaGhoaGhoaFhYgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAFhZoaGhoaGhoaGhoaGhElpbAAAAAAAAAAAAXF2hoaGhoaGhoaGhoaFR
        QgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUxWhoaGhoaGhoaGhVDQAAAAAAAAAAAAAAABVVqGhoaGhoaGh
        oaEFVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATE2hoaGhoaGhTk8AAAAAAAAAAAAAAAAAAABQUaGh
        oaGhoaFSNwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPSEWhoaESNkkAAAAAAAAAAAAAAAAAAAAA
        ABQHoaGhoUpLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+P0BBQgAAAAAAAAAAAAAAAAAA
        AAAAAAAAQ0RFRkcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAPJDg5OjsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAADQyJqGhoaGhNTY3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMTKhoaGhoaGhoaGhGzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALi+hoaGhoaGhoaGhoaGhMAEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALBOhoaGhoaGhoaGhoaGhoaEtAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACuhoaGhoaGhoaGhoaGhoaGhEikAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqhoaGhoaGhoaGhoaGhoaGhoaEEAQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAooaGhoaGhoaGhoaGhoaGhoaGhoSkA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPJqGhoaGhoaGhoaGhoaGhoaGh
        oaEnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJKGhoaGhoaGhoaGhoaGh
        oaGhoaGhJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACOhoaGhoaGhoaGh
        oaGhoaGhoaGhoR4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJoaGhoaGh
        oaGhoaGhoaGhoaGhoaEiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIaGh
        oaGhoaGhoaGhoaGhoaGhoaGhBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AB+hoaGhoaGhoaGhoaGhoaGhoaGhoSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABHqGhoaGhoaGhoaGhoaGhoaGhoaEYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA6hoaGhoaGhoaGhoaGhoaGhoaEdCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAaG6GhoaGhoaGhoaGhoaGhoaGhHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAABihoaGhoaGhoaGhoaGhoaGhGQ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFaGhoaGhoaGhoaGhoaGhFhcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAREqGhoaGhoaGhoaGhExQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsMoaGhoaGhoaENDg8AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQIDBAUGBwgJCgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>